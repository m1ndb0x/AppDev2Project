@model AppDev2Project.Models.SettingsViewModel
@{
    ViewData["Title"] = "User Settings";
    Layout = "_DashboardLayout";
}

<div class="min-h-screen bg-gray-50 py-12">
    <div class="max-w-2xl mx-auto">
        <!-- Page Title -->
        <h1 class="text-3xl font-bold text-gray-900 mb-8 text-center">Account Settings</h1>


@* 
<div class="profile-picture-section mb-4">
    <h4 class="text-xl font-semibold text-teal-600">Profile Picture</h4>
    <div class="mb-2">
        <label>Current Profile Picture:</label>
        <img src="@Model.ProfilePictureUrl" alt="Profile Picture" class="img-thumbnail" style="max-width: 150px; border-radius: 50%;" />
    </div>

    <form asp-action="UpdateProfilePicture" asp-controller="Settings" method="post" enctype="multipart/form-data">
        <div class="form-group">
            <label for="ProfilePictureFile" class="block text-sm font-medium text-gray-700">Upload New Profile Picture</label>
            <input type="file" name="ProfilePictureFile" id="ProfilePictureFile" class="form-control mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-teal-500 focus:ring-teal-500 sm:text-sm" />
        </div>
        <button type="submit" class="btn btn-primary mt-2 inline-flex items-center px-4 py-2 bg-teal-600 text-white rounded-md">Update Profile Picture</button>
    </form>
    <div asp-validation-summary="ModelOnly" class="text-danger mt-2"></div>
</div>

 *@
        <div class="space-y-6">
            <!-- Profile Picture Section -->
            <div class="bg-white rounded-xl shadow-sm p-8 transition duration-300 hover:shadow-md mb-6">
                <div class="flex items-center justify-between mb-4">
                    <h4 class="text-xl font-semibold text-gray-900">Profile Picture</h4>
                    <span class="text-sm text-gray-500">Your profile image</span>
                </div>
                <div class="flex flex-col items-center space-y-4">
                    <div class="w-32 h-32 rounded-full overflow-hidden">
                        <img id="currentProfilePic" 
                             src="@(Model.ProfilePictureUrl ?? "https://ui-avatars.com/api/?name=" + Uri.EscapeDataString(Model.Name) + "&background=random&color=fff")" 
                             alt="Profile Picture" 
                             class="w-full h-full object-cover" />
                    </div>
                    <button type="button" onclick="showImageUploadModal()"
                            class="w-full sm:w-auto flex justify-center py-2 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 transition duration-150">
                        Change Profile Picture
                    </button>
                </div>
            </div>

            <!-- Image Upload Modal -->
            <div id="imageUploadModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
                <div class="relative top-20 mx-auto p-5 w-96 max-w-md shadow-lg rounded-md bg-white">
                    <div class="mt-3">
                        <div class="flex justify-between items-start p-4 rounded-t">
                            <h3 class="text-xl font-semibold text-gray-900">
                                Update Profile Picture
                            </h3>
                            <button type="button" onclick="closeImageUploadModal()" class="text-gray-400 hover:text-gray-500">
                                <span class="sr-only">Close</span>
                                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                </svg>
                            </button>
                        </div>
                        <form asp-action="UpdateProfilePicture" method="post" enctype="multipart/form-data" class="p-4">
                            <div class="space-y-4">
                                <div class="flex flex-col items-center">
                                    <div id="imagePreviewContainer" class="hidden mb-4">
                                        <img id="imagePreview" class="max-w-full h-48 rounded-lg object-cover" />
                                    </div>
                                    <div class="w-full">
                                        <label class="flex flex-col items-center px-4 py-6 bg-white text-blue rounded-lg shadow-lg tracking-wide uppercase border border-dashed border-teal-600 cursor-pointer hover:bg-teal-50 transition-all">
                                            <svg class="w-8 h-8 text-teal-600" fill="currentColor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20">
                                                <path d="M16.88 9.1A4 4 0 0 1 16 17H5a5 5 0 0 1-1-9.9V7a3 3 0 0 1 4.52-2.59A4.98 4.98 0 0 1 17 8c0 .38-.04.74-.12 1.1zM11 11h3l-4-4-4 4h3v3h2v-3z" />
                                            </svg>
                                            <span id="fileLabel" class="mt-2 text-sm text-gray-600">Select an image</span>
                                            <input type="file" 
                                                   asp-for="ProfilePictureFile" 
                                                   class="hidden"
                                                   accept="image/jpeg,image/png"
                                                   onchange="previewImage(this)" />
                                        </label>
                                        <p class="text-xs text-gray-500 mt-2">Maximum file size: 5MB. Supported formats: JPEG, PNG</p>
                                    </div>
                                </div>
                                <div class="flex justify-end space-x-3">
                                    <button type="button" onclick="closeImageUploadModal()"
                                            class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-300">
                                        Cancel
                                    </button>
                                    <button type="submit" id="uploadButton" disabled
                                            class="px-4 py-2 bg-teal-600 text-white rounded-lg hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-teal-500 disabled:opacity-50 disabled:cursor-not-allowed">
                                        Upload Image
                                    </button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Profile Section -->
            <div class="bg-white rounded-xl shadow-sm p-8 transition duration-300 hover:shadow-md">
                <form asp-action="UpdateName" method="post" class="space-y-4">
                    <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm mb-4"></div>
                    <div class="flex items-center justify-between mb-4">
                        <h4 class="text-xl font-semibold text-gray-900">Personal Information</h4>
                        <span class="text-sm text-gray-500">These are your basic profile details</span>
                    </div>
                    <div class="grid gap-6">
                        <div>
                            <label for="name" class="block text-sm font-medium text-gray-700">Full Name</label>
                            <div class="mt-1 relative rounded-md shadow-sm">
                                <input id="name" name="name" type="text"
                                    class="block w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-teal-500 focus:border-transparent transition"
                                    value="@Model.Name" placeholder="Enter your name" />
                            </div>
                        </div>
                        <button type="submit"
                            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 transition duration-150">
                            Save Changes
                        </button>
                    </div>
                </form>
            </div>

            <!-- Email Section -->
            <div class="bg-white rounded-xl shadow-sm p-8 transition duration-300 hover:shadow-md">
                <form asp-action="UpdateEmail" method="post" class="space-y-4">
                    <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm mb-4"></div>
                    <div class="flex items-center justify-between mb-4">
                        <h4 class="text-xl font-semibold text-gray-900">Email Address</h4>
                        <span class="text-sm text-gray-500">Your primary contact email</span>
                    </div>
                    <div class="grid gap-6">
                        <div>
                            <label for="email" class="block text-sm font-medium text-gray-700">Email</label>
                            <div class="mt-1 relative rounded-md shadow-sm">
                                <input id="email" name="email" type="email"
                                    class="block w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-teal-500 focus:border-transparent transition"
                                    value="@Model.Email" placeholder="Enter your email" />
                            </div>
                        </div>
                        <button type="submit"
                            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 transition duration-150">
                            Update Email
                        </button>
                    </div>
                </form>
            </div>

            <!-- Password Section -->
            <div class="bg-white rounded-xl shadow-sm p-8 transition duration-300 hover:shadow-md">
                <form asp-action="UpdatePassword" method="post" class="space-y-4">
                    <div asp-validation-summary="ModelOnly" class="text-red-600 text-sm mb-4"></div>
                    <div class="flex items-center justify-between mb-4">
                        <h4 class="text-xl font-semibold text-gray-900">Security</h4>
                        <span class="text-sm text-gray-500">Manage your password</span>
                    </div>
                    <div class="grid gap-6">
                        <div>
                            <label for="currentPassword" class="block text-sm font-medium text-gray-700">Current
                                Password</label>
                            <div class="mt-1 relative rounded-md shadow-sm">
                                <input id="currentPassword" name="currentPassword" type="password"
                                    class="block w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-teal-500 focus:border-transparent transition"
                                    placeholder="Enter current password" />
                            </div>
                            <span asp-validation-for="CurrentPassword" class="mt-1 text-sm text-red-600"></span>
                        </div>
                        <div>
                            <label for="newPassword" class="block text-sm font-medium text-gray-700">New
                                Password</label>
                            <div class="mt-1 relative rounded-md shadow-sm">
                                <input id="newPassword" name="newPassword" type="password"
                                    class="block w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-teal-500 focus:border-transparent transition"
                                    placeholder="Enter new password" />
                            </div>
                            <span asp-validation-for="NewPassword" class="mt-1 text-sm text-red-600"></span>
                        </div>
                        <div>
                            <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm
                                Password</label>
                            <div class="mt-1 relative rounded-md shadow-sm">
                                <input id="confirmPassword" name="confirmPassword" type="password"
                                    class="block w-full px-4 py-3 rounded-lg border border-gray-200 focus:ring-2 focus:ring-teal-500 focus:border-transparent transition"
                                    placeholder="Confirm new password" />
                            </div>
                            <span asp-validation-for="ConfirmPassword" class="mt-1 text-sm text-red-600"></span>
                        </div>
                        <button type="submit"
                            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-teal-600 hover:bg-teal-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-teal-500 transition duration-150">
                            Change Password
                        </button>
                    </div>
                </form>
            </div>
        </div>
        <!-- Delete Account -->
        <div class="bg-white rounded-xl shadow-sm p-8 transition duration-300 hover:shadow-md">
            <div class="flex items-center justify-between mb-4">
                <h4 class="text-xl font-semibold text-red-600">Danger Zone</h4>
                <span class="text-sm text-gray-500">Permanent account actions</span>
            </div>
            <form asp-action="DeleteAccount" method="post" class="space-y-4">
                <button type="button" onclick="showDeleteModal()"
                    class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition duration-150">
                    Delete Account
                </button>
            </form>
        </div>
<!-- Delete Account Modal -->
<div id="deleteModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100">
                <svg class="h-6 w-6 text-red-600" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                </svg>
            </div>
            <h3 class="text-lg leading-6 font-medium text-gray-900 mt-4">Delete Account</h3>
            <div class="mt-2 px-7 py-3">
                <p class="text-sm text-gray-500">This action cannot be undone. Please enter your password to confirm.</p>
                <form id="deleteAccountForm" asp-action="DeleteAccount" method="post" class="mt-4">
                    <input type="password" id="confirmDeletePassword" name="password" 
                           class="mt-2 w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-red-500 focus:border-transparent" 
                           placeholder="Enter your password" required />
                    <div class="flex justify-end space-x-4 mt-4">
                        <button type="button" onclick="closeDeleteModal()" 
                                class="px-4 py-2 bg-gray-200 text-gray-800 rounded-lg hover:bg-gray-300 focus:outline-none focus:ring-2 focus:ring-gray-300">
                            Cancel
                        </button>
                        <button type="submit" id="confirmDeleteBtn" disabled
                                class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed">
                            Delete Account
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
        <!-- Notifications -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div id="successMessage"
                class="fixed bottom-4 right-4 bg-green-500 text-white px-6 py-3 rounded-lg shadow-lg transition-opacity duration-300">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div id="errorMessage"
                class="fixed bottom-4 right-4 bg-red-500 text-white px-6 py-3 rounded-lg shadow-lg transition-opacity duration-300">
                @TempData["ErrorMessage"]
            </div>
        }
    </div>
</div>

<script>
    setTimeout(function () {
        const messages = document.querySelectorAll('#successMessage, #errorMessage');
        messages.forEach(msg => {
            msg.style.opacity = '0';
            setTimeout(() => msg.remove(), 300);
        });
    }, 5000);


        function showDeleteModal() {
        document.getElementById('deleteModal').classList.remove('hidden');
    }

    function closeDeleteModal() {
        document.getElementById('deleteModal').classList.add('hidden');
        document.getElementById('confirmDeletePassword').value = '';
        document.getElementById('confirmDeleteBtn').disabled = true;
    }

    document.getElementById('confirmDeletePassword').addEventListener('input', function(e) {
        document.getElementById('confirmDeleteBtn').disabled = e.target.value.length < 6;
    });

    // Close modal on outside click
    document.getElementById('deleteModal').addEventListener('click', function(e) {
        if (e.target === this) {
            closeDeleteModal();
        }
    });

        function showImageUploadModal() {
            document.getElementById('imageUploadModal').classList.remove('hidden');
        }

        function closeImageUploadModal() {
            document.getElementById('imageUploadModal').classList.add('hidden');
            document.getElementById('imagePreviewContainer').classList.add('hidden');
            document.getElementById('fileLabel').textContent = 'Select an image';
            document.getElementById('uploadButton').disabled = true;
        }

        function previewImage(input) {
            const preview = document.getElementById('imagePreview');
            const container = document.getElementById('imagePreviewContainer');
            const fileLabel = document.getElementById('fileLabel');
            const uploadButton = document.getElementById('uploadButton');

            if (input.files && input.files[0]) {
                const file = input.files[0];
                
                // Validate file size and type
                if (file.size > 5 * 1024 * 1024) {
                    alert('File size must not exceed 5MB');
                    input.value = '';
                    return;
                }
                
                if (!['image/jpeg', 'image/png'].includes(file.type.toLowerCase())) {
                    alert('Only JPEG and PNG files are allowed');
                    input.value = '';
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    container.classList.remove('hidden');
                    fileLabel.textContent = file.name;
                    uploadButton.disabled = false;
                }
                reader.readAsDataURL(file);
            }
        }

        // Close modal on outside click
        document.getElementById('imageUploadModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeImageUploadModal();
            }
        });
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}