@model CompletedExam
@{
    ViewData["Title"] = "Exam Review";
    Layout = "_DashboardLayout";
    
    var totalScore = Model.TotalScore;
    var percentage = (totalScore / Model.Exam.TotalScoreWeight) * 100;
    var passScore = 60.0; // Can be configured
    var isPassed = percentage >= passScore;
}

<div class="container mx-auto px-4 py-8">
    <!-- Exam Overview Card -->
    <div class="bg-white rounded-lg shadow-md mb-6">
        <div class="p-6 border-b border-gray-200">
            <div class="flex justify-between items-center mb-4">
                <h1 class="text-2xl font-bold text-gray-800">@Model.Exam.Title</h1>
                <div class="flex items-center gap-4">
                    <span class="@(isPassed ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800") px-4 py-2 rounded-full text-sm font-semibold">
                        @(isPassed ? "PASSED" : "FAILED")
                    </span>
                    <span class="text-lg font-semibold">
                        @percentage.ToString("F1")%
                    </span>
                </div>
            </div>
            
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 text-gray-600">
                <div>
                    <p class="text-sm">Subject: @Model.Exam.Subject</p>
                    <p class="text-sm">Score: @totalScore / @Model.Exam.TotalScoreWeight</p>
                </div>
                <div>
                    <p class="text-sm">Completed: @Model.CompletedAt.ToString("MMM dd, yyyy HH:mm")</p>
                    <p class="text-sm">Duration: @Model.Exam.Duration minutes</p>
                </div>
                <div>
                    <p class="text-sm">Questions: @Model.Exam.Questions.Count()</p>
                    <p class="text-sm">Status: @(Model.IsCompleted ? "Completed" : "Incomplete")</p>
                </div>
            </div>
        </div>

        <!-- Questions Review Section -->
        <div class="divide-y divide-gray-200">
            @foreach (var question in Model.Exam.Questions.OrderBy(q => q.Order))
            {
                var attempt = Model.Exam.QuestionAttempts.FirstOrDefault(qa => qa.QuestionId == question.Id && qa.UserId == Model.UserId);
                var isCorrect = attempt?.AnswerText == question.CorrectAnswer;
                var answerClass = isCorrect ? "text-green-700" : "text-red-700";
                
                <div class="p-6 hover:bg-gray-50">
                    <div class="flex items-start gap-4">
                        
                        <div class="flex-grow space-y-3">
                            <div class="flex justify-between">
                                <h3 class="font-semibold text-gray-800">Question @question.Order</h3>
                                <span class="text-sm text-gray-500">@question.ScoreWeight points</span>
                            </div>
                            
                            <p class="text-gray-700">@question.QuestionText</p>
                            
                            @if (attempt != null)
                            {
                                <div class="ml-4 space-y-2">
                                    <p class="@answerClass">
                                        Your Answer: @attempt.AnswerText
                                    </p>
                                    @if (!isCorrect)
                                    {
                                        <p class="text-green-700">
                                            Correct Answer: @question.CorrectAnswer
                                        </p>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="flex justify-between mt-6">
        <a href="@Url.Action("Dashboard", "Student")" 
           class="bg-gray-500 hover:bg-gray-600 text-white px-6 py-2 rounded-md transition duration-150">
            Back to Dashboard
        </a>
    </div>
</div>
