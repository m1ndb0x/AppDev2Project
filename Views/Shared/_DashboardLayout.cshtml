<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Examina</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-100">
    <header>
        <nav class="bg-white shadow-md">
            <!-- Add your navigation items here -->
        </nav>
    </header>

    <main>
        @using Microsoft.AspNetCore.Identity
        @using System.Security.Claims
        @inject UserManager<AppDev2Project.Models.User> UserManager
        @{
            Layout = "_Layout";
        }

        <div class="flex h-full bg-white">
            <!-- Sidebar -->
            <div class="w-64 bg-teal-600 text-white">
                <div class="sticky top-0 h-screen w-64 bg-teal-600 text-white overflow-y-auto z-50">
                    <div class="flex items-center p-4 border-b border-teal-500">
                        <div class="w-10 h-10 rounded-full bg-teal-500 flex items-center justify-center">
                        </div>
                        <div class="ml-3">
                            @{
                                var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
                                var user = await UserManager.FindByIdAsync(userId);
                            }
                            <p class="font-semibold">@(user?.Name ?? "Unknown")</p>
                            <p class="text-sm text-gray-400">@(User.IsInRole("Teacher") ? "Teacher" : "Student")</p>
                        </div>
                    </div>
                    <div class="px-4 py-2 text-xs text-teal-200 uppercase">Main Menu</div>
                    <nav class="mt-4">
                        @if (User.IsInRole("Student"))
                        {
                            <a href="@Url.Action("Dashboard", "Student")" class="flex items-center px-4 py-3 text-white hover:bg-teal-700">
                                <i class="fas fa-home text-lg mr-4"></i>
                                Dashboard
                            </a>
                            <a href="@Url.Action("ExamHistory", "Student")" class="flex items-center px-4 py-3 text-white hover:bg-teal-700">
                                <i class="fas fa-history text-lg mr-4"></i>
                                Exam History
                            </a>
                        }
                        else if (User.IsInRole("Teacher"))
                        {
                            <a href="@Url.Action("Dashboard", "Teacher")" class="flex items-center px-4 py-3 text-white hover:bg-teal-700">
                                <i class="fas fa-home text-lg mr-4"></i>
                                Home
                            </a>
                            <a href="@Url.Action("Index", "Exam")" class="flex items-center px-4 py-3 text-white hover:bg-teal-700">
                                <i class="fas fa-file-alt text-lg mr-4"></i>
                                Exams
                            </a>
                            <a href="@Url.Action("Create", "Exam")" class="flex items-center px-4 py-3 text-white hover:bg-teal-700">
                                <i class="fas fa-plus text-lg mr-4"></i>
                                Create New Exam
                            </a>
                        }
                    </nav>
                </div>
            </div>

            <!-- Main Content -->
            <div class="flex-1 flex flex-col">
                <header class="bg-white shadow flex-shrink-0">
                    <div class="px-6 py-4">
                        <div class="flex justify-between items-center">
                            <h1 class="text-2xl font-bold text-gray-900 ml-2">@ViewData["Title"]</h1>
                            <div class="flex items-center">
                                <span class="mr-4">@DateTime.Now.ToString("dddd, MMMM d, yyyy")</span>
                            </div>
                        </div>
                    </div>
                </header>

                <main class="flex-1 p-6 overflow-y-auto">
                    @RenderBody()
                </main>
            </div>
        </div>

        @await RenderSectionAsync("Scripts", required: false)
    </main>

    <script src="~/js/site.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>