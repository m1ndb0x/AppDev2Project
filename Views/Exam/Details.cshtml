@model AppDev2Project.Models.Exam
@{
    ViewData["Title"] = "Exam Details";
    Layout = "_DashboardLayout";
}

<div class="container mx-auto px-4 py-8">
    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <div class="p-6">
            <h1 class="text-3xl font-bold mb-4">@Model.Title</h1>
            
            <div class="grid grid-cols-2 gap-4 mb-6">
                <div>
                    <h3 class="text-gray-600 text-sm">Subject</h3>
                    <p class="text-gray-900">@Model.Subject</p>
                </div>
                <div>
                    <h3 class="text-gray-600 text-sm">Total Score</h3>
                    <p class="text-gray-900">@Model.TotalScoreWeight</p>
                </div>
                <div>
                    <h3 class="text-gray-600 text-sm">State</h3>
                    <p class="text-gray-900">@Model.State</p>
                </div>
                <div>
                    <h3 class="text-gray-600 text-sm">Created</h3>
                    <p class="text-gray-900">@Model.CreatedAt.ToShortDateString()</p>
                </div>
            </div>

            <div class="mb-6">
                <h3 class="text-gray-600 text-sm mb-2">Description</h3>
                <p class="text-gray-900">@Model.Description</p>
            </div>

            <div class="mt-8">
                <h3 class="text-xl font-bold mb-4">Questions (@(Model.Questions?.Count() ?? 0))</h3>
                @if (Model.Questions != null && Model.Questions.Any())
                {
                    <div class="space-y-4">
                        @foreach (var question in Model.Questions.OrderBy(q => q.Order))
                        {
                            <div class="border rounded-lg p-4 bg-gray-50">
                                <div class="flex justify-between items-start">
                                    <div>
                                        <p class="font-semibold mb-2">@question.QuestionText</p>
                                        <div class="text-sm text-gray-600">
                                            <p>Type: @(question.QuestionType == "multiple_choice" ? "Multiple Choice" : "Short Answer")</p>
                                            <p>Score: @question.ScoreWeight points</p>
                                            @if (question.QuestionType == "multiple_choice")
                                            {
                                                <div class="mt-2">
                                                    <p>Options:</p>
                                                    <ul class="list-disc list-inside ml-4">
                                                        <li>A: @question.ChoiceA</li>
                                                        <li>B: @question.ChoiceB</li>
                                                        <li>C: @question.ChoiceC</li>
                                                        <li>D: @question.ChoiceD</li>
                                                    </ul>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                    <div class="text-sm text-gray-500">
                                        Order: @(question.Order ?? 0)
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
                else
                {
                    <p class="text-gray-600 bg-gray-50 p-4 rounded-lg">No questions have been added to this exam yet.</p>
                }
                @if (User.IsInRole("Teacher"))
                {
                    <div class="mt-4">
                        <a href="@Url.Action("Create", "Question", new { examId = Model.Id })" 
                           class="bg-green-500 text-black px-4 py-2 rounded-md hover:bg-green-600">
                            Add Question
                        </a>
                    </div>
                }
            </div>

            <div class="flex justify-between items-center mt-6">
                <a href="@Url.Action("Index", "Exam")" class="text-blue-500 hover:text-blue-700">Back to List</a>
                @if (User.IsInRole("Teacher"))
                {
                    <div>
                        <a href="@Url.Action("Edit", "Exam", new { id = Model.Id })" 
                           class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600 mr-2">Edit</a>
                        <a href="@Url.Action("Delete", "Exam", new { id = Model.Id })" 
                           class="bg-red-500 text-white px-4 py-2 rounded-md hover:bg-red-600">Delete</a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
