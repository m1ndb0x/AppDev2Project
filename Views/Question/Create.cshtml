@model AppDev2Project.Models.QuestionViewModel
@{
    ViewData["Title"] = "Create Question";
    Layout = "_DashboardLayout";
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="container mx-auto px-4 max-w-4xl">
        <div class="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden">
            <form asp-action="Create" method="post" id="questionForm">
                <div asp-validation-summary="ModelOnly" class="p-4 bg-red-50 text-red-500 border-b"></div>
                <input type="hidden" asp-for="ExamId" />
                <input type="hidden" asp-for="QuestionType" />

                <!-- Header -->
                <div class="p-6 border-b">
                    <h2 class="text-xl font-semibold text-gray-800">Create New Question</h2>
                    <p class="mt-1 text-sm text-gray-600">Add a multiple choice question to your exam.</p>
                </div>

                <div class="p-6 space-y-6">
                    <!-- Question Type Selection -->
                    <div class="mb-6">
                        <label class="block text-sm font-medium text-gray-700 mb-2">Question Type</label>
                        <select id="questionTypeSelect" class="w-full px-4 py-2 border rounded-lg" onchange="handleQuestionTypeChange()">
                            <option value="multiple_choice">Multiple Choice</option>
                            <option value="true_false">True/False</option>
                            <option value="short_answer">Short Answer</option>
                        </select>
                    </div>

                    <!-- Question Text -->
                    <div class="space-y-2">
                        <label asp-for="QuestionText" class="block text-sm font-medium text-gray-700">
                            Question Text <span class="text-red-500">*</span>
                        </label>
                        <textarea asp-for="QuestionText" 
                            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                            rows="3" 
                            placeholder="Enter your question here..."
                            required></textarea>
                        <span asp-validation-for="QuestionText" class="text-sm text-red-500"></span>
                    </div>

                    <!-- Multiple Choice Section -->
                    <div id="multipleChoiceSection" class="space-y-4">
                        <label class="block text-sm font-medium text-gray-700">Answer Options</label>
                        <div class="bg-gray-50 p-4 rounded-lg space-y-4">
                            @for (char option = 'A'; option <= 'D'; option++)
                            {
                                <div class="flex items-center space-x-3 p-2 rounded-lg hover:bg-gray-100 transition-colors group">
                                    <div class="flex items-center">
                                        <input type="radio" 
                                               name="SelectedAnswer" 
                                               value="@option"
                                               id="option@(option)"
                                               class="h-5 w-5 text-indigo-600 focus:ring-indigo-500" 
                                               @(option == 'A' ? "required" : "") />
                                    </div>
                                    <div class="flex-1">
                                        <input type="text" 
                                               name="Choice@(option)"
                                               id="Choice@(option)"
                                               class="w-full px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 group-hover:border-indigo-300"
                                               placeholder="Option @(option)"
                                               required />
                                    </div>
                                </div>
                            }
                        </div>
                    </div>

                    <!-- True/False Section -->
                    <div id="trueFalseSection" class="space-y-4 hidden">
                        <div class="flex items-center space-x-4">
                            <div class="flex items-center">
                                <input type="radio" name="SelectedAnswer" value="true" class="h-5 w-5" required />
                                <label class="ml-2">True</label>
                            </div>
                            <div class="flex items-center">
                                <input type="radio" name="SelectedAnswer" value="false" class="h-5 w-5" />
                                <label class="ml-2">False</label>
                            </div>
                        </div>
                    </div>

                    <!-- Short Answer Section -->
                    <div id="shortAnswerSection" class="space-y-4 hidden">
                        <div class="text-sm text-gray-600 bg-yellow-50 p-4 rounded-lg">
                            Note: Short answer questions require manual grading by the teacher.
                        </div>
                        <textarea
                            name="CorrectAnswer"
                            class="w-full px-4 py-2 border rounded-lg"
                            rows="3"
                            placeholder="Enter the expected answer (for teacher reference)"></textarea>
                    </div>

                    <!-- Score Weight -->
                    <div class="space-y-2">
                        <label asp-for="ScoreWeight" class="block text-sm font-medium text-gray-700">
                            Score Weight <span class="text-red-500">*</span>
                        </label>
                        <div class="flex items-center space-x-2">
                            <input asp-for="ScoreWeight" 
                                type="number" 
                                step="0.5" 
                                min="0.5"
                                max="100"
                                class="w-32 px-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500"
                                required />
                            <span class="text-sm text-gray-500">points</span>
                        </div>
                        <span asp-validation-for="ScoreWeight" class="text-sm text-red-500"></span>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="px-6 py-4 bg-gray-50 border-t border-gray-200 flex justify-between items-center">
                    <div class="text-sm text-gray-500">
                        * Required fields
                    </div>
                    <div class="flex space-x-4">
                        <a asp-controller="Exam" 
                           asp-action="Edit" 
                           asp-route-id="@Model.ExamId" 
                           class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Cancel
                        </a>
                        <button type="submit" 
                            class="px-6 py-2 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
                            Create Question
                        </button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Error Modal -->
<div id="errorModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <h3 class="text-lg leading-6 font-medium text-gray-900">Error</h3>
            <div class="mt-2 px-7 py-3">
                <p id="errorMessage" class="text-sm text-gray-500"></p>
            </div>
            <div class="items-center px-4 py-3">
                <button id="closeErrorModal" class="px-4 py-2 bg-red-500 text-white text-base font-medium rounded-md shadow-sm hover:bg-red-600 focus:outline-none focus:ring-2 focus:ring-red-300">
                    Close
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        function showError(message) {
            document.getElementById('errorMessage').textContent = message;
            document.getElementById('errorModal').classList.remove('hidden');
        }

        function handleQuestionTypeChange() {
            const type = document.getElementById('questionTypeSelect').value;
            document.getElementById('QuestionType').value = type;  // Update hidden field
            
            // Update validation rules based on type
            const correctAnswerInput = document.querySelector('[name="CorrectAnswer"]');
            const selectedAnswerInputs = document.querySelectorAll('[name="SelectedAnswer"]');
            
            correctAnswerInput.required = type === 'short_answer';
            selectedAnswerInputs.forEach(input => {
                input.required = type !== 'short_answer';
            });

            // Show/hide sections
            document.getElementById('multipleChoiceSection').classList.toggle('hidden', type !== 'multiple_choice');
            document.getElementById('trueFalseSection').classList.toggle('hidden', type !== 'true_false');
            document.getElementById('shortAnswerSection').classList.toggle('hidden', type !== 'short_answer');
        }

        document.getElementById('closeErrorModal').addEventListener('click', () => {
            document.getElementById('errorModal').classList.add('hidden');
        });

        document.getElementById('questionForm').addEventListener('submit', function(e) {
            e.preventDefault();
            const type = document.getElementById('questionTypeSelect').value;

            if (type === 'multiple_choice') {
                if (!document.querySelector('input[name="SelectedAnswer"]:checked')) {
                    showError('Please select a correct answer');
                    return;
                }

                let emptyOptions = false;
                document.querySelectorAll('input[type="text"]').forEach(input => {
                    if (!input.value.trim()) {
                        emptyOptions = true;
                    }
                });

                if (emptyOptions) {
                    showError('Please fill in all options');
                    return;
                }
            }

            if (type === 'true_false' && !document.querySelector('input[name="SelectedAnswer"]:checked')) {
                showError('Please select either True or False as the correct answer');
                return;
            }

            // All validation passed, submit the form
            this.submit();
        });

        // Initialize form state
        handleQuestionTypeChange();
    </script>
}